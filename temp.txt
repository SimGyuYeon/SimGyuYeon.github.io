void main() {
  final coms = <ModeListResult>[];

  Future fetch() async {
    var url = Uri.parse('https://kimdj7443.github.io/kdn_solarmap/mode.json');
    var response = await http.get(url);
    final jsonResult = jsonDecode(utf8.decode(response.bodyBytes));
    final jsonStores = jsonResult['list'];
    coms.clear();
    jsonStores.forEach((e) {
      ModeListResult modeListResult = (ModeListResult.fromJson(e));
      coms.add(modeListResult);
    });
    mode = coms[0].contents;
    // print('mode ==> $mode');
    // mode = "3";

    if (mode == "1") {
      contents = coms[1].contents;
      // print("contents ==> ${contents}");
      // print("contents ==> ${utf8.decode(base64.decode(contents))}");
      // await _insertUrl(utf8.decode(base64.decode(contents)));
      init_text = utf8.decode(base64.decode(contents));
      ClassBuilder.registerClasses();
      runApp(MyApp());
    } else if (mode == "2") {
      contents = coms[2].contents;
      // print("contents ==> ${contents}");
      // print("contents ==> ${utf8.decode(base64.decode(contents))}");
      init_text = utf8.decode(base64.decode(contents));
      runApp(ExApp());
    } else if (mode == "3") {
      contents = coms[3].contents;
      // print("contents ==> ${contents}");
      // print("contents ==> ${utf8.decode(base64.decode(contents))}");
      init_text = utf8.decode(base64.decode(contents));
      runApp(ExApp());
    }
  }

  fetch();
}
